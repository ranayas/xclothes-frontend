{"version":3,"sources":["components/FormWrapper/styles.js","components/FormWrapper/index.js","components/FormTitle/styles.js","components/FormTitle/index.js","components/FormSuccess/styles.js","components/FormSuccess/index.js","components/RegisterForm/index.js","components/FormError/styles.js","components/FormError/index.js","components/LoginForm/index.js","pages/Login/styles.js","pages/Login/index.js"],"names":["StyledFormWrapper","styled","form","FormWrapper","children","onSubmit","StyledTitle","p","FormTitle","StyledMessage","FormSuccess","RegisterForm","useState","displayName","email","password","passwordConfirmation","userCredentials","setUserCredentials","successMessage","setSuccesssMessage","handleChange","event","target","name","value","updateUserCredentials","handleSubmit","a","preventDefault","alert","user","userService","console","error","FormItem","label","id","type","onChange","required","Button","FormError","LoginForm","dispatch","useDispatch","config","formData","setFormData","loginErrorMessage","useSelector","selectLoginErrorMessage","previousState","logInUser","LoginWrapper","div","Flex","Login","Wrapper"],"mappings":"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","file":"static/js/3.98b0b10c.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\nexport const StyledFormWrapper = styled.form`\n  padding: 1.6rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.6rem;\n`;\n","import { StyledFormWrapper } from \"./styles\";\n\nconst FormWrapper = ({ children, onSubmit }) => (\n  <StyledFormWrapper onSubmit={onSubmit}>{children}</StyledFormWrapper>\n);\n\nexport default FormWrapper;\n","import styled from \"styled-components/macro\";\n\nexport const StyledTitle = styled.p`\n  font-size: 2.4rem;\n  font-weight: bold;\n`;\n","import { StyledTitle } from \"./styles\";\n\nconst FormTitle = ({ children }) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nexport default FormTitle;\n","import styled from \"styled-components/macro\";\n\nexport const StyledMessage = styled.p`\n  color: green;\n  font-size: 1.4rem;\n`;\n","import { StyledMessage } from \"./styles\";\n\nconst FormSuccess = ({ children }) => <StyledMessage>{children}</StyledMessage>;\n\nexport default FormSuccess;\n","import { useState } from \"react\";\nimport Button from \"../Button\";\nimport FormItem from \"../FormItem\";\nimport FormWrapper from \"../FormWrapper\";\nimport FormTitle from \"../FormTitle\";\nimport FormSuccess from \"../FormSuccess\";\nimport * as userService from \"../../services/userService\";\n\nconst updateUserCredentials = (name, value) => (userCredentials) => ({\n  ...userCredentials,\n  [name]: value,\n});\n\nconst RegisterForm = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  });\n  const [successMessage, setSuccesssMessage] = useState(null);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials(updateUserCredentials(name, value));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userCredentials.password !== userCredentials.passwordConfirmation) {\n      return alert(\"Password does not match\");\n    }\n\n    const user = {\n      name: userCredentials.displayName,\n      email: userCredentials.email,\n      password: userCredentials.password,\n      passwordConfirmation: userCredentials.passwordConfirmation,\n    };\n\n    try {\n      await userService.createUser(user);\n      setSuccesssMessage(\"Successful register\");\n      setUserCredentials({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n      });\n    } catch (error) {\n      console.error(error);\n      setSuccesssMessage(null);\n    }\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FormTitle>Register</FormTitle>\n      <FormItem\n        label=\"Display Name\"\n        id=\"displayName\"\n        name=\"displayName\"\n        type=\"text\"\n        value={userCredentials.displayName}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Email\"\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        value={userCredentials.email}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Password\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        value={userCredentials.password}\n        onChange={handleChange}\n        required\n      />\n      <FormItem\n        label=\"Password Confirmation\"\n        id=\"passwordConfirmation\"\n        name=\"passwordConfirmation\"\n        type=\"password\"\n        value={userCredentials.passwordConfirmation}\n        onChange={handleChange}\n        required\n      />\n      {successMessage && <FormSuccess>{successMessage}</FormSuccess>}\n      <Button type=\"submit\">Register</Button>\n    </FormWrapper>\n  );\n};\n\nexport default RegisterForm;\n","import styled from \"styled-components/macro\";\n\nexport const StyledMessage = styled.p`\n  font-size: 1.4rem;\n  color: red;\n`;\n","import { StyledMessage } from \"./styles\";\n\nconst FormError = ({ children }) => {\n  return <StyledMessage>{children}</StyledMessage>;\n};\n\nexport default FormError;\n","import Button from \"../Button\";\nimport FormItem from \"../FormItem\";\nimport FormWrapper from \"../FormWrapper\";\nimport FormTitle from \"../FormTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logInUser, selectLoginErrorMessage } from \"../../store/shared/userSlice\";\nimport { useState } from \"react\";\nimport FormError from \"../FormError\";\nimport * as config from \"../../config\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: config.isDevMode() ? \"jhon.doe@email.com\" : \"\",\n    password: config.isDevMode() ? \"123456789\" : \"\",\n  });\n  const loginErrorMessage = useSelector(selectLoginErrorMessage);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const userCredentials = {\n      email: formData.email,\n      password: formData.password,\n    };\n\n    dispatch(logInUser(userCredentials));\n  };\n\n  const handleChange = (event) =>\n    setFormData((previousState) => ({\n      ...previousState,\n      [event.target.name]: event.target.value,\n    }));\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FormTitle>Login</FormTitle>\n      <FormItem\n        id=\"loginEmail\"\n        label=\"Email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={handleChange}\n        type=\"email\"\n        required\n      />\n      <FormItem\n        id=\"loginPassword\"\n        label=\"Password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={handleChange}\n        type=\"password\"\n        required\n      />\n      <Button type=\"submit\">Login</Button>\n      {loginErrorMessage && <FormError>{loginErrorMessage}</FormError>}\n    </FormWrapper>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"styled-components/macro\";\n\nexport const LoginWrapper = styled.div`\n  padding-top: 3.2rem;\n`;\n\nexport const Flex = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(425px, 1fr));\n`;\n","import RegisterForm from \"../../components/RegisterForm\";\nimport LoginForm from \"../../components/LoginForm\";\nimport Wrapper from \"../../components/Wrapper\";\nimport { LoginWrapper, Flex } from \"./styles\";\n\nconst Login = () => {\n  return (\n    <LoginWrapper>\n      <Wrapper>\n        <Flex>\n          <RegisterForm />\n          <LoginForm />\n        </Flex>\n      </Wrapper>\n    </LoginWrapper>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}